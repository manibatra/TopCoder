package practice;
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class SRM268_Lvl3
{

	String tokens[];
	String defs[];
	int ptr = 0;
	public String infer(String expression, String[] definitions)
	{
		split(expression);
		defs = definitions;
		return eval();
		
	}
	
	
		
	
	
	private String eval() {
		String r = tokens[ptr++];
		if(ptr < tokens.length && tokens[ptr].equals("(")){
			
			r += tokens[ptr++];
			
			while(true){
				
				r = r + eval() + tokens[ptr++];
				if(tokens[ptr - 1].equals(")"))
					break;
				
			}
			
		}
		return match(r+":");
	}





	private String match(String string) {
		
		for(String d : defs){
			if(d.startsWith(string))
				return d.substring(string.length());
			
		}
		return "";
	}





	private void split(String expression) {
		StringTokenizer t = new StringTokenizer(expression, ":(),!", true);
		tokens = new String[t.countTokens()];
		
		int i = 0;
		
		while(t.hasMoreTokens()){
			tokens[i++]=t.nextToken();
		}
		
	}





	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM268_Lvl3 obj;
		String answer;
		obj = new SRM268_Lvl3();
		long startTime = System.currentTimeMillis();
		answer = obj.infer(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = "x";
		p1 = new String[]{"x:Char"};
		p2 = "Char";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
//		
		// ----- test 1 -----
		p0 = "upper(x)";
		p1 = new String[]{"x:Char","upper(Char):Char"};
		p2 = "Char";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
//		// ------------------
//		
//		// ----- test 2 -----
		p0 = "ord(upper(letter))";
		p1 = new String[]{"ord(Char):Int","upper(Char):Char","letter:Char","Letter:String"};
		p2 = "Int";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
//		// ------------------
//		
		// ----- test 3 -----
		p0 = "id(id)";
		p1 = new String[]{"id(Int):Int"};
		p2 = "";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
//		// ------------------
//		
		// ----- test 4 -----
		p0 = "f(unknown)";
		p1 = new String[]{"f(A):B"};
		p2 = "";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
//		// ------------------
//		
		// ----- test 5 -----
		p0 = "fst(zero)";
		p1 = new String[]{"fst(Int,Int):Int","zero:Int"};
		p2 = "";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
//		// ------------------
//		
		// ----- test 6 -----
		p0 = "Func(Int,Char,a)";
		p1 = new String[]{"Int:Char","Func(Char,Char,Int):Int","Char:Char","a:Int"};
		p2 = "Int";
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
//		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
