package practice;
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class MergeStrings
{


	public String getmin(String S, String A, String B)
	{

		int la = A.length();
		int lb = B.length();

		String[][] dp = new String[la+1][lb+1];

		dp[0][0] = "";

		for(int a = 0; a <= la; a++)
			for(int b = 0; b <= lb; b++){

				String s1 = null;
				String s2 = null;

				if(a > 0){

					if(dp[a-1][b] != null){

						if(S.charAt(a+b-1) == '?' || S.charAt(a + b -1) == A.charAt(a - 1)){

							s1 = dp[a-1][b] + A.charAt(a - 1);

						}



					}


				}

				if(b > 0){

					if(dp[a][b-1] != null){

						if(S.charAt(a+b-1) == '?' || S.charAt(a + b -1) == B.charAt(b - 1)){

							s2 = dp[a][b-1] + B.charAt(b - 1);

						}



					}


				}

				if(s1 != null || s2 != null){
					boolean smaller = false;

					if(s1 == null){

						smaller = false;

					} else if(s2 == null){

						smaller = true;

					} else {

						smaller = s1.compareTo(s2) < 0;

					}

					dp[a][b] = smaller ? s1 : s2;

				}






			}


		return (dp[la][lb] != null) ? dp[la][lb] : "";
	}



	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, String p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"" + "," + "\"" + p2 + "\"");
		System.out.println("]");
		MergeStrings obj;
		String answer;
		obj = new MergeStrings();
		long startTime = System.currentTimeMillis();
		answer = obj.getmin(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String p0;
		String p1;
		String p2;
		String p3;

		// ----- test 0 -----
		p0 = "??CC??";
		p1 = "ABC";
		p2 = "BCC";
		p3 = "ABCCBC";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = "WHAT?";
		p1 = "THE";
		p2 = "WA";
		p3 = "";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = "PARROT";
		p1 = "PARROT";
		p2 = "";
		p3 = "PARROT";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = "???????????";
		p1 = "AZZAA";
		p2 = "AZAZZA";
		p3 = "AAZAZZAAZZA";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = "????K??????????????D???K???K????????K?????K???????";
		p1 = "KKKKKDKKKDKKDDKDDDKDKK";
		p2 = "KDKDDKKKDDKDDKKKDKDKKDDDDDDD";
		p3 = "KDKDKDKKKDDKDDKKKDKDKKDKDDDKDDDKKDKKKDKKDDKDDDKDKK";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
